% piechart_bars_stats.m
% Date: 09/12/23
% AUthor: Cara
% Purpose: to turn the statistics of how many neurons are modulated in each
% condition into bar charts and displaying the statistics

function piechart_bars_stats()
%% Setup
addpath(genpath('/home/hanlabadmins/handata_server/Cara_Ravasio/Code/GCaMP_Data_Extraction'));
save_path = '/home/hanlabadmins/handata_server/Cara_Ravasio/Data/GCaMP_Data_Extraction/Paper_Figures_Clean_Data';

cd(save_path);
Fs = 20; % Hz

%pie chart colors
red = [204 0 0]/255;
grey = [220 219 219]/255;
dark_blue = [22 83 126]/255;

%% Load in Data
% - CA1 - %
load([save_path,'/pos_40_CA1.mat']);
load([save_path,'/pos_140_CA1.mat']);
load([save_path,'/pos_1000_CA1.mat']);

load([save_path,'/neg_40_CA1.mat']);
load([save_path,'/neg_140_CA1.mat']);
load([save_path,'/neg_1000_CA1.mat']);

load([save_path, '/non_mod_40_CA1.mat']);
load([save_path, '/non_mod_140_CA1.mat']);
load([save_path, '/non_mod_1000_CA1.mat']);

% - M1 - %
load([save_path,'/pos_40_M1.mat']);
load([save_path,'/pos_140_M1.mat']);
load([save_path,'/pos_1000_M1.mat']);

load([save_path,'/neg_40_M1.mat']);
load([save_path,'/neg_140_M1.mat']);
load([save_path,'/neg_1000_M1.mat']);

load([save_path, '/non_mod_40_M1.mat']);
load([save_path, '/non_mod_140_M1.mat']);
load([save_path, '/non_mod_1000_M1.mat']);

% - Fisher's Test Table stats -%
load([save_path,'/fishers_stats.mat']);

%% Create bar graph data matrix
% matrix setup
% col1: Neg, col2: Pos, col3: Non
% row1: 40Hz CA1, row2: 140Hz CA1, row3: 1000Hz CA1
% row4: 40Hz M1, row5: 140Hz M1, row6: 1000Hz M1

bar_mat = [size(neg_40_CA1.neurons,1), size(pos_40_CA1.neurons,1), size(non_mod_40_CA1.neurons,1);...
        size(neg_140_CA1.neurons,1), size(pos_140_CA1.neurons,1), size(non_mod_140_CA1.neurons,1);...
        size(neg_1000_CA1.neurons,1), size(pos_1000_CA1.neurons,1), size(non_mod_1000_CA1.neurons,1);...
        size(neg_40_M1.neurons,1), size(pos_40_M1.neurons,1), size(non_mod_40_M1.neurons,1);...
        size(neg_140_M1.neurons,1), size(pos_140_M1.neurons,1), size(non_mod_140_M1.neurons,1);...
        size(neg_1000_M1.neurons,1), size(pos_1000_M1.neurons,1), size(non_mod_1000_M1.neurons,1)];
bar_mat_p = bar_mat./sum(bar_mat,2);

%% Generate and save bar charts
X = categorical({'40Hz CA1','140Hz CA1','1000Hz CA1','40Hz M1','140Hz M1','1000Hz M1'});
X = reordercats(X,{'40Hz CA1','140Hz CA1','1000Hz CA1','40Hz M1','140Hz M1','1000Hz M1'});
Y = bar_mat_p;
figure
b = bar(X,Y,'Facecolor','flat');
b(1,1).CData = dark_blue;
b(1,2).CData = red;
b(1,3).CData = grey;

figure
b = bar(X,Y(:,1:2),'FaceColor','flat');
b(1,1).CData = dark_blue;
b(1,2).CData = red;

%% Chi-Squared Test
%% - CA1 -%
% 3x3 contingency tables
% Observed data
observed = bar_mat(1:3,:);
chi2test_stats.CA1.observed = observed;
[chi2test_stats.CA1.p, ...
 chi2test_stats.CA1.p_adj,...
 chi2test_stats.CA1.w, ...
 chi2test_stats.CA1.df,...
 chi2test_stats.CA1.chi2stat, ...
 chi2test_stats.CA1.expected] = chi2test_Cara(observed); % based on  Peder Axensten chi2test.m

observed = [bar_mat(1:3,2),sum([bar_mat(1:3,logical([1 0 1]))],2)];
chi2test_stats.CA1.pos_notpos.observed = observed;
[chi2test_stats.CA1.pos_notpos.p, ...
 chi2test_stats.CA1.pos_notpos.p_adj,...
 chi2test_stats.CA1.pos_notpos.w, ...
 chi2test_stats.CA1.pos_notpos.df,...
 chi2test_stats.CA1.pos_notpos.chi2stat, ...
 chi2test_stats.CA1.pos_notpos.expected] = chi2test_Cara(observed);

 observed = [bar_mat(1:3,1),sum([bar_mat(1:3,2:3)],2)];
chi2test_stats.CA1.neg_notneg.observed = observed;
[chi2test_stats.CA1.neg_notneg.p, ...
 chi2test_stats.CA1.neg_notneg.p_adj,...
 chi2test_stats.CA1.neg_notneg.w, ...
 chi2test_stats.CA1.neg_notneg.df,...
 chi2test_stats.CA1.neg_notneg.chi2stat, ...
 chi2test_stats.CA1.neg_notneg.expected] = chi2test_Cara(observed);

% 2x2 contingency tables
% 40vs140; pos/not-pos
observed = [bar_mat(1:2,2),sum([bar_mat(1:2,logical([1 0 1]))],2)];
chi2test_stats.CA1.hz40_140.pos_notpos.observed = observed;
[chi2test_stats.CA1.hz40_140.pos_notpos.p,...
 chi2test_stats.CA1.hz40_140.pos_notpos.p_adj, ...
 chi2test_stats.CA1.hz40_140.pos_notpos.w, ...
 chi2test_stats.CA1.hz40_140.pos_notpos.df,...
 chi2test_stats.CA1.hz40_140.pos_notpos.chi2stat, ...
 chi2test_stats.CA1.hz40_140.pos_notpos.expected] = chi2test_Cara(observed);

% 40vs1000; pos/not-pos
observed = [bar_mat(logical([1 0 1]),2),sum([bar_mat(logical([1 0 1]),logical([1 0 1]))],2)];
chi2test_stats.CA1.hz40_1000.pos_notpos.observed = observed;
[chi2test_stats.CA1.hz40_1000.pos_notpos.p,...
 chi2test_stats.CA1.hz40_1000.pos_notpos.p_adj, ...
 chi2test_stats.CA1.hz40_1000.pos_notpos.w, ...
 chi2test_stats.CA1.hz40_1000.pos_notpos.df,...
 chi2test_stats.CA1.hz40_1000.pos_notpos.chi2stat, ...
 chi2test_stats.CA1.hz40_1000.pos_notpos.expected] = chi2test_Cara(observed);

% 140vs1000; pos/not-pos
observed = [bar_mat(2:3,2),sum([bar_mat(2:3,logical([1 0 1]))],2)];
chi2test_stats.CA1.hz140_1000.pos_notpos.observed = observed;
[chi2test_stats.CA1.hz140_1000.pos_notpos.p,...
 chi2test_stats.CA1.hz140_1000.pos_notpos.p_adj, ...
 chi2test_stats.CA1.hz140_1000.pos_notpos.w, ...
 chi2test_stats.CA1.hz140_1000.pos_notpos.df,...
 chi2test_stats.CA1.hz140_1000.pos_notpos.chi2stat, ...
 chi2test_stats.CA1.hz140_1000.pos_notpos.expected] = chi2test_Cara(observed);

% 40vs140; neg/not-neg
observed = [bar_mat(1:2,1),sum([bar_mat(1:2,2:3)],2)];
chi2test_stats.CA1.hz40_140.neg_notneg.observed = observed;
[chi2test_stats.CA1.hz40_140.neg_notneg.p,...
 chi2test_stats.CA1.hz40_140.neg_notneg.p_adj, ...
 chi2test_stats.CA1.hz40_140.neg_notneg.w, ...
 chi2test_stats.CA1.hz40_140.neg_notneg.df,...
 chi2test_stats.CA1.hz40_140.neg_notneg.chi2stat, ...
 chi2test_stats.CA1.hz40_140.neg_notneg.expected] = chi2test_Cara(observed);

% 40vs1000; neg/not-neg
observed = [bar_mat(logical([1 0 1]),1),sum([bar_mat(logical([1 0 1]),2:3)],2)];
chi2test_stats.CA1.hz40_1000.neg_notneg.observed = observed;
[chi2test_stats.CA1.hz40_1000.neg_notneg.p,...
 chi2test_stats.CA1.hz40_1000.neg_notneg.p_adj, ...
 chi2test_stats.CA1.hz40_1000.neg_notneg.w, ...
 chi2test_stats.CA1.hz40_1000.neg_notneg.df,...
 chi2test_stats.CA1.hz40_1000.neg_notneg.chi2stat, ...
 chi2test_stats.CA1.hz40_1000.neg_notneg.expected] = chi2test_Cara(observed);

% 140vs1000; neg/not-neg
observed = [bar_mat(2:3,1),sum([bar_mat(2:3,2:3)],2)];
chi2test_stats.CA1.hz140_1000.neg_notneg.observed = observed;
[chi2test_stats.CA1.hz140_1000.neg_notneg.p,...
 chi2test_stats.CA1.hz140_1000.neg_notneg.p_adj, ...
 chi2test_stats.CA1.hz140_1000.neg_notneg.w, ...
 chi2test_stats.CA1.hz140_1000.neg_notneg.df,...
 chi2test_stats.CA1.hz140_1000.neg_notneg.chi2stat, ...
 chi2test_stats.CA1.hz140_1000.neg_notneg.expected] = chi2test_Cara(observed);

%% - M1 -%
% 3x3 contingency tables
% Observed data
observed = bar_mat(4:6,:);
chi2test_stats.M1.observed = observed;
[chi2test_stats.M1.p, ...
 chi2test_stats.M1.p_adj,...
 chi2test_stats.M1.w, ...
 chi2test_stats.M1.df,...
 chi2test_stats.M1.chi2stat, ...
 chi2test_stats.M1.expected] = chi2test_Cara(observed); % based on  Peder Axensten chi2test.m


observed = [bar_mat(1:3,2),sum([bar_mat(1:3,logical([1 0 1]))],2)];
chi2test_stats.M1.pos_notpos.observed = observed;
[chi2test_stats.M1.pos_notpos.p, ...
 chi2test_stats.M1.pos_notpos.p_adj,...
 chi2test_stats.M1.pos_notpos.w, ...
 chi2test_stats.M1.pos_notpos.df,...
 chi2test_stats.M1.pos_notpos.chi2stat, ...
 chi2test_stats.M1.pos_notpos.expected] = chi2test_Cara(observed);

 observed = [bar_mat(1:3,1),sum([bar_mat(1:3,2:3)],2)];
chi2test_stats.M1.neg_notneg.observed = observed;
[chi2test_stats.M1.neg_notneg.p, ...
 chi2test_stats.M1.neg_notneg.p_adj,...
 chi2test_stats.M1.neg_notneg.w, ...
 chi2test_stats.M1.neg_notneg.df,...
 chi2test_stats.M1.neg_notneg.chi2stat, ...
 chi2test_stats.M1.neg_notneg.expected] = chi2test_Cara(observed);

% 2x2 contingency tables
% 40vs140; pos/not-pos
observed = [bar_mat(4:5,2),sum([bar_mat(4:5,logical([1 0 1 ]))],2)];
chi2test_stats.M1.hz40_140.pos_notpos.observed = observed;
[chi2test_stats.M1.hz40_140.pos_notpos.p,...
 chi2test_stats.M1.hz40_140.pos_notpos.p_adj, ...
 chi2test_stats.M1.hz40_140.pos_notpos.w, ...
 chi2test_stats.M1.hz40_140.pos_notpos.df,...
 chi2test_stats.M1.hz40_140.pos_notpos.chi2stat, ...
 chi2test_stats.M1.hz40_140.pos_notpos.expected] = chi2test_Cara(observed);

% 40vs1000; pos/not-pos
observed = [bar_mat(logical([0 0 0 1 0 1]),2),sum([bar_mat(logical([0 0 0 1 0 1]),logical([1 0 1]))],2)];
chi2test_stats.M1.hz40_1000.pos_notpos.observed = observed;
[chi2test_stats.M1.hz40_1000.pos_notpos.p,...
 chi2test_stats.M1.hz40_1000.pos_notpos.p_adj, ...
 chi2test_stats.M1.hz40_1000.pos_notpos.w, ...
 chi2test_stats.M1.hz40_1000.pos_notpos.df,...
 chi2test_stats.M1.hz40_1000.pos_notpos.chi2stat, ...
 chi2test_stats.M1.hz40_1000.pos_notpos.expected] = chi2test_Cara(observed);

% 140vs1000; pos/not-pos
observed = [bar_mat(5:6,2),sum([bar_mat(5:6,logical([1 0 1]))],2)];
chi2test_stats.M1.hz140_1000.pos_notpos.observed = observed;
[chi2test_stats.M1.hz140_1000.pos_notpos.p,...
 chi2test_stats.M1.hz140_1000.pos_notpos.p_adj, ...
 chi2test_stats.M1.hz140_1000.pos_notpos.w, ...
 chi2test_stats.M1.hz140_1000.pos_notpos.df,...
 chi2test_stats.M1.hz140_1000.pos_notpos.chi2stat, ...
 chi2test_stats.M1.hz140_1000.pos_notpos.expected] = chi2test_Cara(observed);

% 40vs140; neg/not-neg
observed = [bar_mat(4:5,1),sum([bar_mat(4:5,2:3)],2)];
chi2test_stats.M1.hz40_140.neg_notneg.observed = observed;
[chi2test_stats.M1.hz40_140.neg_notneg.p,...
 chi2test_stats.M1.hz40_140.neg_notneg.p_adj, ...
 chi2test_stats.M1.hz40_140.neg_notneg.w, ...
 chi2test_stats.M1.hz40_140.neg_notneg.df,...
 chi2test_stats.M1.hz40_140.neg_notneg.chi2stat, ...
 chi2test_stats.M1.hz40_140.neg_notneg.expected] = chi2test_Cara(observed);

% 40vs1000; neg/not-neg
observed = [bar_mat(logical([0 0 0 1 0 1]),1),sum([bar_mat(logical([0 0 0 1 0 1]),2:3)],2)];
chi2test_stats.M1.hz40_1000.neg_notneg.observed = observed;
[chi2test_stats.M1.hz40_1000.neg_notneg.p,...
 chi2test_stats.M1.hz40_1000.neg_notneg.p_adj, ...
 chi2test_stats.M1.hz40_1000.neg_notneg.w, ...
 chi2test_stats.M1.hz40_1000.neg_notneg.df,...
 chi2test_stats.M1.hz40_1000.neg_notneg.chi2stat, ...
 chi2test_stats.M1.hz40_1000.neg_notneg.expected] = chi2test_Cara(observed);

% 140vs1000; neg/not-neg
observed = [bar_mat(5:6,1),sum([bar_mat(5:6,2:3)],2)];
chi2test_stats.M1.hz140_1000.neg_notneg.observed = observed;
[chi2test_stats.M1.hz140_1000.neg_notneg.p,...
 chi2test_stats.M1.hz140_1000.neg_notneg.p_adj, ...
 chi2test_stats.M1.hz140_1000.neg_notneg.w, ...
 chi2test_stats.M1.hz140_1000.neg_notneg.df,...
 chi2test_stats.M1.hz140_1000.neg_notneg.chi2stat, ...
 chi2test_stats.M1.hz140_1000.neg_notneg.expected] = chi2test_Cara(observed);
end